version: '3.2'
services:
  etcd0:
      image: "quay.io/coreos/etcd:v3.2.9"
      command: 
          - /usr/local/bin/etcd
          - "-name"
          - etcd0
          - "-advertise-client-urls"
          - http://localhost:22379,http://localhost:24001
          - --data-dir
          - "/tmp/etcd_data"
          - -listen-client-urls
          - "http://0.0.0.0:22379,http://0.0.0.0:24001"
          - -listen-peer-urls
          - "http://0.0.0.0:22380"
          - -initial-advertise-peer-urls
          - "http://etcd0:22380"
          - -initial-cluster
          - "etcd0=http://etcd0:22380"
          - -initial-cluster-state
          - "new"
      volumes:
          - ${STORAGE_ROOT}/tmp/etcd0:/etcd_data
  apiserver:
      image: "gcr.io/google-containers/hyperkube:v1.8.15"
      command:
          - ./hyperkube
          - apiserver
          - --etcd-servers=http://etcd0:24001
          - --service-cluster-ip-range=10.254.0.0/18
          - --service-node-port-range=80-32767
          - --insecure-bind-address=0.0.0.0
          - --insecure-port=8080
          - --apiserver-count=1
  mysql_main:
    container_name: "paasng_mysql_main"
    image: mysql:5.7.22
    volumes:
      - ${STORAGE_ROOT}/mysql:/var/lib/mysql/
    environment:
      MYSQL_DATABASE: bk_paas_ng
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    command: [
      "mysqld",
      "--character-set-server=utf8mb4",
      "--collation-server=utf8mb4_unicode_ci"
      ]
  minio:
    container_name: "paasng_minio"
    image: minio/minio:RELEASE.2018-08-02T23-11-36Z
    command: server /data
    volumes:
      - ${STORAGE_ROOT}/minio:/data
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
  redis_main:
    container_name: "paasng_redis_main"
    image: redis:3.2.0
    volumes:
      - ${STORAGE_ROOT}/redis:/var/lib/redis
  svn-server:
    container_name: "paasng_svn_server"
    image: "garethflowers/svn-server"
    volumes:
      - ${STORAGE_ROOT}/svn-server:/var/opt/svn

networks:
  default:
    external:
      name: ${NETWORK_NAME}
