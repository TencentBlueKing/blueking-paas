[importlinter]
root_packages = 
    paasng
    paas_wl
include_external_packages = True

# **TODO**: 
#   - Write contracts for paas_wl package
#   - Write contracts between paasng and paas_wl packages
#   # Fix (most of) the "ignore_imports"
# 
# Below packages are not excluded from contracts them will introduces too many errors, 
# the dependencies around these modules is too complicated at this moment. The plan is
# to fix this in the near future.
# 
# paasng.platform.modules
# paasng.platform.applications
# paasng.dev_resources.sourcectl

[importlinter:contract:layers-main]
name=the main layers
type=layers
layers =
    paasng.plat_admin 
    paasng.extensions.bk_plugins 
    paasng.accessories.bk_lesscode | paasng.extensions.smart_app
    paasng.accessories.search | paasng.ci | paasng.cnative | paasng.dev_resources.cloudapi |  paasng.extensions.declarative| paasng.extensions.scene_app | paasng.platform.environments | paasng.platform.log 
    paasng.dev_resources.servicehub
    paasng.accessories.bkmonitorv3 | paasng.accessories.changelog | paasng.accessories.documentation | paasng.accessories.log_search | paasng.accessories.paas_analysis | paasng.accessories.smart_advisor | paasng.platform.operations
    paasng.dev_resources.services | paasng.publish | paasng.service_proxy
    paasng.accessories.bk_components | paasng.accounts.permissions
    paasng.accessories.iam 
    paasng.accounts.models
    paasng.dev_resources.templates | paasng.accounts.oauth | paasng.platform.feature_flags
    paasng.platform.region | paasng.platform.core 
ignore_imports =
    # TODO: Remove these rules after the dependency relations are fixed.
    paasng.platform.applications.models -> paasng.publish.**
    paasng.platform.applications.models -> paasng.accessories.iam.**
    paasng.platform.applications.views_ext -> paasng.plat_admin.system.applications
    paasng.dev_resources.sourcectl.connector -> paasng.dev_resources.services.utils
    paasng.extensions.scene_app.initializer -> paasng.extensions.declarative.*
    paasng.accessories.paas_analysis.utils -> paasng.platform.environments.models
    paasng.dev_resources.services.management.commands.query_related_applications -> paasng.platform.environments.models
    paas_wl.cluster.constants -> paasng.platform.log.constants
    paasng.platform.modules.manager -> paasng.platform.log.shim
    paasng.cnative.services -> paasng.platform.log.shim
    paasng.platform.operations.views -> paasng.platform.applications.views
    paasng.platform.operations.serializers -> paasng.platform.applications.serializers
    paasng.publish.entrance.serializers -> paasng.platform.modules.serializers
    paasng.publish.market.serializers -> paasng.platform.applications.serializers
    paasng.dev_resources.templates.views -> paasng.engine.configurations.image
    paasng.dev_resources.templates.** -> paasng.platform.modules.**


[importlinter:contract:layers-engine]
name=the layers for paasng.engine mod
type=layers
layers =
    paasng.engine.deploy | paasng.engine.streaming
    paasng.engine.workflow | paasng.engine.processes
    paasng.engine.mobile_config | paasng.engine.phases_steps 
    paasng.engine.utils
    paasng.engine.configurations
    paasng.engine.models
ignore_imports =
    # TODO: Remove these rules after the dependency relations are fixed.
    paas_wl.resources.base.* -> paasng.engine.configurations.*
    paas_wl.cnative.specs.addresses -> paasng.engine.configurations.ingress
    paas_wl.platform.applications.models.build -> paasng.engine.deploy.bg_build.utils
    paasng.platform.modules.specs -> paasng.engine.configurations.building
    paasng.engine.models.base -> paasng.engine.utils.output
    paasng.engine.models.managers -> paasng.engine.phases_steps.*
    paasng.engine.models.phases -> paasng.engine.phases_steps.steps
    paasng.engine.processes.handlers -> paasng.engine.deploy.bg_wait.wait_deployment
    paasng.engine.workflow.flow -> paasng.engine.deploy.engine_svc
    paasng.engine.utils.version -> paasng.engine.deploy.archive
    paasng.engine.utils.source -> paasng.accessories.smart_advisor.tagging

[importlinter:contract:independent-apps]
name=main independent modules
type=independence
modules =
    paasng.metrics
    paasng.tracing
