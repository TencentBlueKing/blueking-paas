[importlinter]
root_packages = 
    paasng
    paas_wl
include_external_packages = True

# **TODO**: 
#   - Write contracts for paas_wl package
#   - Write contracts between paasng and paas_wl packages
#   # Fix (most of) the "ignore_imports"
# 
# Below packages are not excluded from contracts them will introduces too many errors, 
# the dependencies around these modules is too complicated at this moment. The plan is
# to fix this in the near future.
# 
# paasng.platform.modules
# paasng.platform.applications
# paasng.engine
# paasng.dev_resources.sourcectl
# paasng.dev_resources.templates

[importlinter:contract:layers-main]
name=the main layers
type=layers
layers = 
    # Platform admin system is the highest level
    paasng.plat_admin 
    paasng.extensions.bk_plugins 
    paasng.accessories.bk_lesscode | paasng.extensions.smart_app | paasng.extensions.scene_app
    paasng.accessories.search | paasng.ci | paasng.cnative | paasng.dev_resources.cloudapi |  paasng.extensions.declarative | paasng.platform.environments
    paasng.dev_resources.servicehub
    paasng.accessories.documentation | paasng.accessories.paas_analysis | paasng.accessories.smart_advisor | paasng.platform.operations
    paasng.dev_resources.services | paasng.publish | paasng.service_proxy | paasng.platform.log 
    paasng.accessories.bk_components | paasng.accounts.permissions | paasng.accessories.log_search | paasng.accessories.bkmonitorv3
    paasng.accessories.iam 
    paasng.accounts.models
    paasng.accounts.oauth | paasng.platform.feature_flags
    paasng.platform.region | paasng.platform.core | paasng.accessories.changelog


[importlinter:contract:layers-engine]
name=the layers for paasng.engine mod
type=layers
layers =
    paasng.engine.deploy | paasng.engine.streaming
    paasng.engine.workflow | paasng.engine.processes
    paasng.engine.mobile_config | paasng.engine.phases_steps 
    paasng.engine.utils
    paasng.engine.configurations
    paasng.engine.models
ignore_imports =
    # TODO: Remove these rules after the dependency relations are fixed.
    paasng.engine.models.base -> paasng.engine.utils.output


[importlinter:contract:independent-apps]
name=main independent modules
type=independence
modules =
    paasng.metrics
    paasng.tracing


[importlinter:contract:layers-paas-wl]
name=the layers for paas_wl module
type=layers
layers = 
    # -- The admin layer
    paas_wl.admin | paas_wl.platform.system_api
    # -- The domain services layer
    paas_wl.deploy
    paas_wl.monitoring
    paas_wl.workloads.processes
    paas_wl.cnative
    paas_wl.tracing | paas_wl.networking | paas_wl.configuration | paas_wl.release_controller | paas_wl.workloads.images
    paas_wl.workloads.autoscaling
    # -- The infrastructure and data models layer
    paas_wl.resources | paas_wl.workloads.resource_templates
    paas_wl.cluster | paas_wl.core
    paas_wl.platform.applications
    # -- The utils layer
    paas_wl.utils
ignore_imports =
    # Depend on the "constants" submodule is excluded because "constants" is treated like
    # a shared settings globally.
    paas_wl.** -> paas_wl.**.constants
    # To share process labels, to be removed
    paas_wl.networking.ingress.entities.service -> paas_wl.workloads.processes.readers
    # Back ref to paasng.engine.deploy module, to be removed
    paas_wl.cnative.specs.views_enduser -> paasng.engine.deploy.release.operator
    # Only for type hints and generation module, to be removed
    paas_wl.workloads.processes.serializers -> paas_wl.deploy.app_res.generation.mapper
    paas_wl.resources.kube_res.base -> paas_wl.deploy.app_res.generation.mapper
    paas_wl.platform.applications.models.managers.app_res_ver -> paas_wl.deploy.app_res.generation
    paas_wl.platform.applications.handlers -> paas_wl.deploy.app_res.generation
    paas_wl.platform.applications.models.managers.app_res_ver -> paas_wl.resources.**
    # views_enduser can import deploy
    paas_wl.workloads.processes.views_enduser -> paas_wl.deploy.processes
    # Replace the dep with signal
    paas_wl.networking.ingress.domains.manager -> paas_wl.cnative.specs.resource
    # TODO: Remove these rules after the dependency relations are fixed.
    paas_wl.workloads.processes.views -> paasng.engine.deploy.version
    paas_wl.platform.applications.** -> paas_wl.workloads.processes.models