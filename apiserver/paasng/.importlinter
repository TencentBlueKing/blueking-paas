[importlinter]
root_packages = 
    paasng
    paas_wl
include_external_packages = True


[importlinter:contract:layers-main]
name=the main layers
type=layers
layers = 
    # Platform admin system is the highest level
    paasng.plat_admin 
    paasng.bk_plugins 
    paasng.platform
    paasng.accessories
    paasng.infras
    paasng.core
ignore_imports =
    # Below packages are not excluded from contracts them will introduces too many errors, 
    # the dependencies around these modules is too complicated at this moment. The plan is
    # to fix this in the near future.
    paasng.platform.applications.** -> **
    ** -> paasng.platform.applications.**
    paasng.platform.modules.** -> **
    ** -> paasng.platform.modules.**
    paasng.platform.engine.** -> **
    ** -> paasng.platform.engine.**
    paasng.platform.sourcectl.** -> **
    ** -> paasng.platform.sourcectl.**
    paasng.platform.templates.** -> **
    ** -> paasng.platform.templates.**
    # Other ignores
    paas_wl.workloads.processes.models -> paasng.platform.declarative.deployment.resources
    paasng.platform.engine.utils.query -> paasng.platform.engine.workflow
    paasng.accessories.log.client -> paasng.bk_plugins.pluginscenter.**
    # legacydb
    paasng.infras.legacydb.adaptors -> paasng.accessories.publish.sync_market.*
    paasng.infras.legacydb.adaptors -> paasng.platform.mgrlegacy.constants
    paasng.infras.legacydb_te.adaptors -> paasng.accessories.publish.sync_market.*
    paasng.infras.legacydb_te.adaptors -> paasng.platform.mgrlegacy.constants
    # mgrlegacy
    paasng.accessories.publish.sync_market.handlers_ext -> paasng.platform.mgrlegacy.signals


[importlinter:contract:layers-engine]
name=the layers for paasng.engine mod
type=layers
layers =
    deploy | streaming
    workflow | processes
    mobile_config | phases_steps 
    utils
    configurations
    models
containers=
    paasng.platform.engine
ignore_imports =
    # TODO: Remove these rules after the dependency relations are fixed.
    paasng.platform.engine.models.base -> paasng.platform.engine.utils.output
    paasng.platform.engine.utils.query -> paasng.platform.engine.workflow


[importlinter:contract:independent-apps]
name=main independent modules
type=independence
modules =
    paasng.misc.metrics
    paasng.misc.tracing
    paasng.misc.changelog
    paasng.misc.feature_flags


[importlinter:contract:layers-paas-wl]
name=the layers for paas_wl module
type=layers
layers = 
    # -- The admin layer
    paas_wl.admin | paas_wl.platform.system_api
    # -- The domain services layer
    paas_wl.deploy
    paas_wl.monitoring
    paas_wl.workloads.processes
    paas_wl.cnative
    paas_wl.tracing | paas_wl.networking | paas_wl.configuration | paas_wl.release_controller | paas_wl.workloads.images
    paas_wl.workloads.autoscaling
    paas_wl.core
    # -- The infrastructure and data models layer
    paas_wl.resources | paas_wl.workloads.resource_templates
    paas_wl.cluster
    paas_wl.platform.applications
    # -- The utils layer
    paas_wl.utils
ignore_imports =
    # Depend on the "constants" submodule is excluded because "constants" is treated like
    # a shared settings globally.
    paas_wl.** -> paas_wl.**.constants
    # view_enduser -> engine.deploy module, to be removed in the future if we find a better way
    paas_wl.cnative.specs.views_enduser -> paasng.platform.engine.deploy.release.operator
    paas_wl.workloads.resource_templates.utils -> paas_wl.workloads.processes.models


[importlinter:contract:layers-paas-wl-resources]
name=the layers for paas_wl.resources module
type=layers
layers = 
    kube_res
    generation
    utils
    base
containers=
    paas_wl.resources