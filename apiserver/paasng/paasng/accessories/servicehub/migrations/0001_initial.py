# -*- coding: utf-8 -*-
# TencentBlueKing is pleased to support the open source community by making
# 蓝鲸智云 - PaaS 平台 (BlueKing - PaaS System) available.
# Copyright (C) 2017 THL A29 Limited, a Tencent company. All rights reserved.
# Licensed under the MIT License (the "License"); you may not use this file except
# in compliance with the License. You may obtain a copy of the License at
#
#     http://opensource.org/licenses/MIT
#
# Unless required by applicable law or agreed to in writing, software distributed under
# the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
# either express or implied. See the License for the specific language governing permissions and
# limitations under the License.
#
# We undertake not to change the open source license (MIT license) applicable
# to the current version of the project delivered to anyone in the future.

# Generated by Django 2.2.17 on 2020-11-27 02:50

from django.db import migrations, models
import django.db.models.deletion
import paasng.utils.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('engine', '0001_initial'),
        ('modules', '0001_initial'),
        ('applications', '0001_initial'),
        ('services', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceModuleAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(help_text='部署区域', max_length=32)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('owner', paasng.utils.models.BkUserField(blank=True, db_index=True, max_length=64, null=True)),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modules.Module', verbose_name='蓝鲸应用模块')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.Service')),
            ],
            options={
                'unique_together': {('service', 'module')},
            },
        ),
        migrations.CreateModel(
            name='ServiceEngineAppAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(help_text='部署区域', max_length=32)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('owner', paasng.utils.models.BkUserField(blank=True, db_index=True, max_length=64, null=True)),
                ('engine_app', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='service_attachment', to='engine.EngineApp')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.Plan')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.Service')),
                ('service_instance', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='service_attachment', to='services.ServiceInstance')),
            ],
            options={
                'unique_together': {('service', 'engine_app')},
            },
        ),
        migrations.CreateModel(
            name='ServiceApplicationAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(help_text='部署区域', max_length=32)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('owner', paasng.utils.models.BkUserField(blank=True, db_index=True, max_length=64, null=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applications.Application', verbose_name='蓝鲸应用')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='services.Service')),
            ],
            options={
                'unique_together': {('service', 'application')},
            },
        ),
        migrations.CreateModel(
            name='RemoteServiceModuleAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(help_text='部署区域', max_length=32)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('owner', paasng.utils.models.BkUserField(blank=True, db_index=True, max_length=64, null=True)),
                ('service_id', models.UUIDField(verbose_name='远程增强服务 ID')),
                ('module', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='modules.Module', verbose_name='蓝鲸应用模块')),
            ],
            options={
                'unique_together': {('service_id', 'module')},
            },
        ),
        migrations.CreateModel(
            name='RemoteServiceEngineAppAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(help_text='部署区域', max_length=32)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('owner', paasng.utils.models.BkUserField(blank=True, db_index=True, max_length=64, null=True)),
                ('service_id', models.UUIDField(verbose_name='远程增强服务 ID')),
                ('plan_id', models.UUIDField(verbose_name='远程增强服务 Plan ID')),
                ('service_instance_id', models.UUIDField(null=True)),
                ('engine_app', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='remote_service_attachment', to='engine.EngineApp')),
            ],
            options={
                'unique_together': {('service_id', 'engine_app')},
            },
        ),
        migrations.CreateModel(
            name='RemoteServiceApplicationAttachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('region', models.CharField(help_text='部署区域', max_length=32)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('owner', paasng.utils.models.BkUserField(blank=True, db_index=True, max_length=64, null=True)),
                ('service_id', models.UUIDField(verbose_name='远程增强服务 ID')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='applications.Application', verbose_name='蓝鲸应用')),
            ],
            options={
                'unique_together': {('service_id', 'application')},
            },
        ),
    ]
