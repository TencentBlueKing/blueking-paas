# Generated by Django 3.2.25 on 2024-08-09 08:16

from django.db import migrations
from typing import Dict, Optional

from paasng.infras.iam.permissions.resources.application import AppAction
from paasng.misc.audit.constants import OperationEnum, OperationTarget, ResultCode
from paasng.misc.audit.handlers import on_app_operation_created, post_save
from paasng.misc.audit.models import AppLatestOperationRecord, AppOperationRecord
from paasng.misc.operations.constant import OperationType as OpType
from paasng.misc.operations.models import Operation
from django.db.models import Max

OPRATION_TRANSFER_MAP: Dict[int, Dict[str, Optional[str]]] = {
    OpType.CREATE_APPLICATION.value: {
        "action_id": "",
        "target": OperationTarget.APP,
        "operation": OperationEnum.CREATE_APP,
        "attribute_name": None,
    },
    OpType.REGISTER_PRODUCT.value: {
        "action_id": AppAction.MANAGE_APP_MARKET,
        "target": OperationTarget.APP,
        "operation": OperationEnum.MODIFY_MARKET_INFO,
        "attribute_name": None,
    },
    OpType.MODIFY_PRODUCT_ATTRIBUTES.value: {
        "action_id": AppAction.MANAGE_APP_MARKET,
        "target": OperationTarget.APP,
        "operation": OperationEnum.MODIFY_MARKET_INFO,
        "attribute_name": None,
    },
    OpType.PROCESS_START.value: {
        "action_id": AppAction.BASIC_DEVELOP,
        "target": OperationTarget.PROCESS,
        "operation": OperationEnum.START,
        "attribute_name": "process_type",
    },
    OpType.PROCESS_STOP.value: {
        "action_id": AppAction.BASIC_DEVELOP,
        "target": OperationTarget.PROCESS,
        "operation": OperationEnum.STOP,
        "attribute_name": "process_type",
    },
    OpType.DELETE_APPLICATION.value: {
        "action_id": AppAction.DELETE_APPLICATION,
        "target": OperationTarget.APP,
        "operation": OperationEnum.DELETE,
        "attribute_name": None,
    },
    OpType.OFFLINE_APPLICATION_STAG_ENVIRONMENT.value: {
        "action_id": AppAction.DELETE_APPLICATION,
        "target": OperationTarget.APP,
        "operation": OperationEnum.OFFLINE,
        "attribute_name": None,
    },
    OpType.OFFLINE_APPLICATION_PROD_ENVIRONMENT.value: {
        "action_id": AppAction.DELETE_APPLICATION,
        "target": OperationTarget.APP,
        "operation": OperationEnum.OFFLINE,
        "attribute_name": None,
    },
    OpType.DEPLOY_APPLICATION.value: {
        "action_id": AppAction.BASIC_DEVELOP,
        "target": OperationTarget.APP,
        "operation": OperationEnum.DEPLOY,
        "attribute_name": None,
    },
    OpType.CREATE_MODULE.value: {
        "action_id": AppAction.MANAGE_MODULE,
        "target": OperationTarget.MODULE,
        "operation": OperationEnum.CREATE,
        "attribute_name": None,
    },
    OpType.DELETE_MODULE.value: {
        "action_id": AppAction.MANAGE_MODULE,
        "target": OperationTarget.MODULE,
        "operation": OperationEnum.DELETE,
        "attribute_name": None,
    },
    OpType.DEPLOY_CNATIVE_APP.value: {
        "action_id": AppAction.BASIC_DEVELOP,
        "target": OperationTarget.APP,
        "operation": OperationEnum.DEPLOY,
    },
    OpType.OFFLINE_MARKET.value: {
        "action_id": AppAction.MANAGE_APP_MARKET,
        "target": OperationTarget.APP,
        "operation": OperationEnum.OFFLINE_MARKET,
        "attribute_name": None,
    },
    OpType.RELEASE_TO_MARKET.value: {
        "action_id": AppAction.MANAGE_APP_MARKET,
        "target": OperationTarget.APP,
        "operation": OperationEnum.RELEASE_TO_MARKET,
        "attribute_name": None,
    },
    OpType.APPLY_PERM_FOR_CLOUD_API.value: {
        "action_id": AppAction.MANAGE_CLOUD_API,
        "target": OperationTarget.CLOUD_API,
        "operation": OperationEnum.APPLY,
        "attribute_name": "gateway_name",
    },
    OpType.RENEW_PERM_FOR_CLOUD_API.value: {
        "action_id": AppAction.MANAGE_CLOUD_API,
        "target": OperationTarget.CLOUD_API,
        "operation": OperationEnum.RENEW,
        "attribute_name": "gateway_name",
    },
    OpType.ENABLE_ACCESS_CONTROL.value: {
        "action_id": AppAction.MANAGE_ACCESS_CONTROL,
        "target": OperationTarget.ACCESS_CONTROL,
        "operation": OperationEnum.ENABLE,
        "attribute_name": None,
    },
    OpType.DISABLE_ACCESS_CONTROL.value: {
        "action_id": AppAction.MANAGE_ACCESS_CONTROL,
        "target": OperationTarget.ACCESS_CONTROL,
        "operation": OperationEnum.DISABLE,
        "attribute_name": None,
    },
}

def transfer_operations_to_audit(apps, schema_editor):
    # 获取每个 application 的最新 created 时间的 Operation 的 ID
    latest_operations_subquery = Operation.objects.values('application').annotate(
        latest_created=Max('created')
    ).values('latest_created')

    # 使用最新的 created 时间进行过滤
    latest_operations = Operation.objects.filter(created__in=latest_operations_subquery)

    for op in latest_operations.iterator():
        operation_type = OPRATION_TRANSFER_MAP.get(op.type, {}).get("operation")
        if not operation_type:
            continue

        # 申请网关权限、启停进程等操作对象的具体属性记录在 extra_values 的相应字段中
        attribute_name = OPRATION_TRANSFER_MAP.get(op.type, {}).get("attribute_name")
        if attribute_name:
            attribute = op.extra_values.get(attribute_name)
        else:
            attribute = None
        # 如果原来的操作记录中保存了操作结果，则也需要同步
        if not op.extra_values.get("has_succeeded"):
            result_code = ResultCode.FAILURE
        else:
            result_code = ResultCode.SUCCESS

        # 禁用自动同步，否则 AppLatestOperationRecord 中的 latest_operated_at 会更新为最新的操作时间
        post_save.disconnect(on_app_operation_created)
        new_record = AppOperationRecord.objects.create(
            app_code=op.application.code,
            user=op.user,
            module_name=op.module_name,
            environment=op.extra_values.get("env_name"),
            action_id=OPRATION_TRANSFER_MAP.get(op.type, {}).get("action_id"),
            operation=OPRATION_TRANSFER_MAP.get(op.type, {}).get("operation"),
            target=OPRATION_TRANSFER_MAP.get(op.type, {}).get("target"),
            attribute=attribute,
            result_code=result_code,
        )

        # 时间字段都是自动添加的，只能通过 update 方法来自定义
        AppOperationRecord.objects.filter(uuid=new_record.uuid).update(
            start_time=op.created,
            created=op.created,
        )
        AppLatestOperationRecord.objects.update_or_create(
            application=new_record.application,
            defaults={
                "operation_id": new_record.pk,
                "latest_operated_at": op.created,
            },
        )


class Migration(migrations.Migration):

    dependencies = [
        ("audit", "0001_initial"),
        ("operations", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(transfer_operations_to_audit),
    ]