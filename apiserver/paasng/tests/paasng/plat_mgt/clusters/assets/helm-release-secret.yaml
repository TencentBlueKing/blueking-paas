apiVersion: v1
data:
  release: 
kind: Secret
metadata:
  creationTimestamp: "2024-07-02T07:50:33Z"
  labels:
    modifiedAt: "1719906633"
    name: jaeger
    owner: helm
    status: deployed
    version: "1"
  name: sh.helm.release.v1.jaeger.v1
  namespace: bk-jaeger
  resourceVersion: "22598359849"
  selfLink: /api/v1/namespaces/bk-jaeger/secrets/sh.helm.release.v1.jaeger.v1
  uid: 7e6ffa7f-ae37-81aa-4e13-455e03c820ca
type: helm.sh/release.v1
