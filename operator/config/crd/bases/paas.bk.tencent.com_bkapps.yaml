---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.0
  creationTimestamp: null
  name: bkapps.paas.bk.tencent.com
spec:
  group: paas.bk.tencent.com
  names:
    kind: BkApp
    listKind: BkAppList
    plural: bkapps
    singular: bkapp
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .status.hookStatuses[?(@.type == "pre-release")].phase
      name: PreRelease Hook Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: BkApp is the Schema for the bkapps API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AppSpec defines the desired state of BkApp
            properties:
              addons:
                description: Addons is a list of add-on service
                items:
                  description: Addon is used to specify add-on service
                  properties:
                    name:
                      description: Name of the add-on service, e.g. redis
                      type: string
                    specs:
                      description: Specifies of the add-on service, if not set, recommended
                        specifies will be used
                      items:
                        description: 'AddonSpec is used to specify add-on service,
                          e.g. version: 6.0'
                        properties:
                          name:
                            description: Name of the spec.
                            type: string
                          value:
                            description: Value of the spec value
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                  required:
                  - name
                  type: object
                type: array
              build:
                description: 'BuildConfig is the configuration related with application
                  building, the platform support 3 types of build config currently:
                  image, remote build by Dockerfile and remote build by buildpack.'
                properties:
                  args:
                    additionalProperties:
                      type: string
                    description: Args is the additional build arguments, it will be
                      used to build image by Dockerfile
                    type: object
                  buildTarget:
                    description: BuildTarget, when multiple stages are defined in
                      Dockerfile, this field is used to specify the target stage.
                    type: string
                  dockerfile:
                    description: '*2. Remote build by Dockerfile* Dockerfile is the
                      name of target Dockerfile, it will be used to build.'
                    type: string
                  image:
                    description: '*1. Build by image* Image is the container image
                      name of current application, tag and container registry address
                      can be included.'
                    type: string
                  imageCredentialsName:
                    description: ImageCredentialsName is the name of image credentials,
                      required for pulling images stores in private registry.
                    type: string
                  imagePullPolicy:
                    description: ImagePullPolicy is the image pull policy of given
                      image.
                    type: string
                type: object
              configuration:
                description: AppConfig is bkapp related configuration, such as environment
                  variables, etc.
                properties:
                  env:
                    description: List of environment variables to set in the container.
                    items:
                      description: AppEnvVar defines the environment variable of bkapp
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: Value of the environment variable
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                type: object
              envOverlay:
                description: EnvOverlay holds environment specified configurations,
                  includes replica count and environment variables.
                properties:
                  autoscaling:
                    description: Autoscaling overwrite process's autoscaling config
                    items:
                      description: AutoscalingOverlay overwrite or add application's
                        autoscaling config by environment.
                      properties:
                        envName:
                          description: EnvName is app environment name
                          type: string
                        maxReplicas:
                          description: maxReplicas is the upper limit for the number
                            of replicas to which the autoscaler can scale up. It cannot
                            be less that minReplicas.
                          format: int32
                          type: integer
                        minReplicas:
                          description: minReplicas is the lower limit for the number
                            of replicas to which the autoscaler can scale down. It
                            defaults to 1 pod. minReplicas is allowed to be 0 if the
                            alpha feature gate GPAScaleToZero is enabled and at least
                            one Object or External metric is configured. Scaling is
                            active as long as at least one metric value is available
                          format: int32
                          type: integer
                        policy:
                          description: Policy defines the policy for autoscaling,
                            its optional values depend on the policies supported by
                            the operator.
                          type: string
                        process:
                          description: Process is the name of process
                          type: string
                      required:
                      - envName
                      - maxReplicas
                      - minReplicas
                      - policy
                      - process
                      type: object
                    type: array
                  envVariables:
                    description: EnvVariables overwrite BkApp's environment vars
                    items:
                      description: EnvVarOverlay overwrite or add application's environment
                        vars by environment.
                      properties:
                        envName:
                          description: EnvName is app environment name
                          type: string
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: Value of the environment variable
                          type: string
                      required:
                      - envName
                      - name
                      - value
                      type: object
                    type: array
                  replicas:
                    description: Replicas overwrite process's replicas count
                    items:
                      description: ReplicasOverlay overwrite process's replicas by
                        environment.
                      properties:
                        count:
                          description: Count is the desired replicas for current process
                          format: int32
                          type: integer
                        envName:
                          description: EnvName is app environment name
                          type: string
                        process:
                          description: Process is the name of process
                          type: string
                      required:
                      - count
                      - envName
                      - process
                      type: object
                    type: array
                  resQuotas:
                    description: ResQuotas overwrite BkApp's process resource quota
                    items:
                      description: ResQuotaOverlay overwrite process's resQuota by
                        environment.
                      properties:
                        envName:
                          description: EnvName is app environment name
                          type: string
                        plan:
                          description: Plan is used to specify process resource quota
                          type: string
                        process:
                          description: Process is the name of process
                          type: string
                      required:
                      - envName
                      - plan
                      - process
                      type: object
                    type: array
                type: object
              hooks:
                description: Hook commands of current BkApp resource
                properties:
                  preRelease:
                    description: Hook is a set of commands to execute during bkapp
                      deployment, running, and termination
                    properties:
                      args:
                        description: Arguments to the entrypoint.
                        items:
                          type: string
                        type: array
                      command:
                        description: Entrypoint array. Not executed within a shell.
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              observability:
                description: Observability holds observability configurations, includes
                  metrics config. However, it is primarily informational here, the
                  real control logic is in paas "apiserver".
                properties:
                  monitoring:
                    description: Monitoring is monitor config
                    properties:
                      metrics:
                        items:
                          description: Metric is monitor metric config for process
                            services
                          properties:
                            params:
                              additionalProperties:
                                type: string
                              description: Params is the params of metric api
                              type: object
                            path:
                              description: Path is the path of metric api
                              type: string
                            process:
                              description: Process is the name of process
                              type: string
                            serviceName:
                              description: ServiceName is the name of process service
                              type: string
                          required:
                          - path
                          - process
                          - serviceName
                          type: object
                        type: array
                    required:
                    - metrics
                    type: object
                type: object
              processes:
                items:
                  description: Process defines the process of BkApp
                  properties:
                    args:
                      description: Arguments to the entrypoint.
                      items:
                        type: string
                      type: array
                    autoscaling:
                      description: Autoscaling specifies the autoscaling configuration
                      properties:
                        maxReplicas:
                          description: maxReplicas is the upper limit for the number
                            of replicas to which the autoscaler can scale up. It cannot
                            be less that minReplicas.
                          format: int32
                          type: integer
                        minReplicas:
                          description: minReplicas is the lower limit for the number
                            of replicas to which the autoscaler can scale down. It
                            defaults to 1 pod. minReplicas is allowed to be 0 if the
                            alpha feature gate GPAScaleToZero is enabled and at least
                            one Object or External metric is configured. Scaling is
                            active as long as at least one metric value is available
                          format: int32
                          type: integer
                        policy:
                          description: Policy defines the policy for autoscaling,
                            its optional values depend on the policies supported by
                            the operator.
                          type: string
                      required:
                      - maxReplicas
                      - minReplicas
                      - policy
                      type: object
                    command:
                      description: Entrypoint array. Not executed within a shell.
                      items:
                        type: string
                      type: array
                    cpu:
                      description: CPU will be used as limits.cpu
                      type: string
                    image:
                      description: Container image name
                      type: string
                    imagePullPolicy:
                      description: Container image pull policy
                      type: string
                    memory:
                      description: Memory will be used as limits.memory
                      type: string
                    name:
                      description: Name of process
                      type: string
                    probes:
                      description: Probes specifies the probe configuration
                      properties:
                        liveness:
                          description: liveness is the configuration for liveness
                            probes.
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's
                                    filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions
                                    ('|', etc) won't work. To use a shell, you need
                                    to explicitly call out to that shell. Exit status
                                    of 0 is treated as live/healthy and non-zero is
                                    unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            grpc:
                              description: GRPC specifies an action involving a GRPC
                                port. This is a beta field and requires enabling GRPCContainerProbe
                                feature gate.
                              properties:
                                port:
                                  description: Port number of the gRPC service. Number
                                    must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                                service:
                                  description: "Service is the name of the service
                                    to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                    \n If this is not specified, the default behavior
                                    is defined by gRPC."
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in
                                    httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the
                                    host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container
                                has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness and startup. Minimum
                                value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving
                                a TCP port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: Optional duration in seconds the pod needs
                                to terminate gracefully upon probe failure. The grace
                                period is the duration in seconds after the processes
                                running in the pod are sent a termination signal and
                                the time when the processes are forcibly halted with
                                a kill signal. Set this value longer than the expected
                                cleanup time for your process. If this value is nil,
                                the pod's terminationGracePeriodSeconds will be used.
                                Otherwise, this value overrides the value provided
                                by the pod spec. Value must be non-negative integer.
                                The value zero indicates stop immediately via the
                                kill signal (no opportunity to shut down). This is
                                a beta field and requires enabling ProbeTerminationGracePeriod
                                feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                is used if unset.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                                times out. Defaults to 1 second. Minimum value is
                                1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        readiness:
                          description: ReadinessProbe is the configuration for readiness
                            probes.
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's
                                    filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions
                                    ('|', etc) won't work. To use a shell, you need
                                    to explicitly call out to that shell. Exit status
                                    of 0 is treated as live/healthy and non-zero is
                                    unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            grpc:
                              description: GRPC specifies an action involving a GRPC
                                port. This is a beta field and requires enabling GRPCContainerProbe
                                feature gate.
                              properties:
                                port:
                                  description: Port number of the gRPC service. Number
                                    must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                                service:
                                  description: "Service is the name of the service
                                    to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                    \n If this is not specified, the default behavior
                                    is defined by gRPC."
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in
                                    httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the
                                    host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container
                                has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness and startup. Minimum
                                value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving
                                a TCP port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: Optional duration in seconds the pod needs
                                to terminate gracefully upon probe failure. The grace
                                period is the duration in seconds after the processes
                                running in the pod are sent a termination signal and
                                the time when the processes are forcibly halted with
                                a kill signal. Set this value longer than the expected
                                cleanup time for your process. If this value is nil,
                                the pod's terminationGracePeriodSeconds will be used.
                                Otherwise, this value overrides the value provided
                                by the pod spec. Value must be non-negative integer.
                                The value zero indicates stop immediately via the
                                kill signal (no opportunity to shut down). This is
                                a beta field and requires enabling ProbeTerminationGracePeriod
                                feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                is used if unset.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                                times out. Defaults to 1 second. Minimum value is
                                1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        startup:
                          description: StartupProbe is the configuration for startup
                            probes.
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's
                                    filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions
                                    ('|', etc) won't work. To use a shell, you need
                                    to explicitly call out to that shell. Exit status
                                    of 0 is treated as live/healthy and non-zero is
                                    unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            grpc:
                              description: GRPC specifies an action involving a GRPC
                                port. This is a beta field and requires enabling GRPCContainerProbe
                                feature gate.
                              properties:
                                port:
                                  description: Port number of the gRPC service. Number
                                    must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                                service:
                                  description: "Service is the name of the service
                                    to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                    \n If this is not specified, the default behavior
                                    is defined by gRPC."
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in
                                    httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the
                                    host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container
                                has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness and startup. Minimum
                                value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving
                                a TCP port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: Optional duration in seconds the pod needs
                                to terminate gracefully upon probe failure. The grace
                                period is the duration in seconds after the processes
                                running in the pod are sent a termination signal and
                                the time when the processes are forcibly halted with
                                a kill signal. Set this value longer than the expected
                                cleanup time for your process. If this value is nil,
                                the pod's terminationGracePeriodSeconds will be used.
                                Otherwise, this value overrides the value provided
                                by the pod spec. Value must be non-negative integer.
                                The value zero indicates stop immediately via the
                                kill signal (no opportunity to shut down). This is
                                a beta field and requires enabling ProbeTerminationGracePeriod
                                feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                is used if unset.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                                times out. Defaults to 1 second. Minimum value is
                                1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                      type: object
                    replicas:
                      description: Replicas will be used as deployment's spec.replicas
                      format: int32
                      type: integer
                    resQuotaPlan:
                      description: ResQuotaPlan is the name of plan which defines
                        how much resources current process can consume.
                      type: string
                    services:
                      description: Services is a list of ProcService which used to
                        expose process network for access within or outside the cluster.
                      items:
                        description: ProcService is a process service which used to
                          expose network
                        properties:
                          exposedType:
                            description: "The exposed type of the service. If not
                              specified(or specified as null), the service can only
                              be accessed within the cluster, not from outside. however,
                              it is primarily informational here, the real control
                              logic is in paas \"apiserver\". TODO implement control
                              logic in operator? \n ExposedType can be one of the
                              following: - {Name: ExposedTypeNameBkHttp} exposed by
                              DomainGroupMapping"
                            properties:
                              name:
                                description: The name of the exposed type.
                                type: string
                            required:
                            - name
                            type: object
                          name:
                            description: The name of the service.
                            type: string
                          port:
                            description: The port that will be exposed by this service.
                              If this is not specified, the value of the 'targetPort'
                              field is used.
                            format: int32
                            type: integer
                          protocol:
                            default: TCP
                            description: The protocol of the service. Default value
                              is TCP if not specified.
                            type: string
                          targetPort:
                            description: Number of the port to access on the pods(container)
                              targeted by the service.
                            format: int32
                            type: integer
                        required:
                        - name
                        - targetPort
                        type: object
                      type: array
                    targetPort:
                      description: The containerPort to expose server
                      format: int32
                      type: integer
                  required:
                  - image
                  - name
                  - replicas
                  type: object
                type: array
            required:
            - configuration
            - processes
            type: object
          status:
            description: AppStatus defines the observed state of BkApp
            properties:
              addonStatuses:
                description: AddonStatuses is the status of add-on service include
                  specifications
                items:
                  description: AddonStatus is the status of add-on service
                  properties:
                    message:
                      description: if add-on service state is failed, message will
                        be the fail message
                      type: string
                    name:
                      type: string
                    specs:
                      items:
                        description: 'AddonSpec is used to specify add-on service,
                          e.g. version: 6.0'
                        properties:
                          name:
                            description: Name of the spec.
                            type: string
                          value:
                            description: Value of the spec value
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    state:
                      description: AddonState is the state of add-on with app
                      enum:
                      - provisioned
                      - failed
                      type: string
                  required:
                  - name
                  - state
                  type: object
                type: array
              addresses:
                description: Addresses holds all addressable locations of current
                  BkApp, user may visit app via these locations, includes all domain
                  source types.
                items:
                  description: Addressable includes URL and other related properties
                  properties:
                    sourceType:
                      description: SourceType, see CRD DomainGroupMapping for more
                        details
                      type: string
                    url:
                      description: URL generally has the form "http[s]://{hostname}/{subpath}/"
                      type: string
                  required:
                  - sourceType
                  - url
                  type: object
                type: array
              conditions:
                description: Conditions Represents the latest available observations
                  of a BkApp's current state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              deployId:
                description: DeployId of the BkApp, which is injected from bkpaas
                type: string
              hookStatuses:
                description: HookStatuses is the status of Hook execution
                items:
                  description: HookStatus define the status of Hook execution
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the status
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: if pod is unhealthy, message will be the fail message,
                        otherwise, same with PodStatus.Message
                      type: string
                    phase:
                      description: Phase Represents the hook pod health status
                      type: string
                    reason:
                      description: Same with PodStatus.Reason
                      type: string
                    startTime:
                      description: The hook's start time
                      format: date-time
                      type: string
                    started:
                      description: Started is true when hook is started
                      type: boolean
                    type:
                      description: HookType hook type
                      type: string
                  required:
                  - phase
                  - type
                  type: object
                type: array
              lastUpdate:
                description: LastUpdate is the bkapp's last update time
                format: date-time
                type: string
              observedGeneration:
                description: observedGeneration is the most recent generation observed
                  for this BkApp. It corresponds to the .metadata.generation, which
                  is updated on mutation by the API Server.
                format: int64
                type: integer
              phase:
                description: The phase of a BkApp is a simple, high-level summary
                  of where the BkApp is in its lifecycle.
                type: string
              revision:
                description: Revision of the BkApp configuration it generates
                properties:
                  revision:
                    description: BkApp's version
                    format: int64
                    type: integer
                required:
                - revision
                type: object
            required:
            - phase
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .status.hookStatuses[?(@.type == "pre-release")].phase
      name: PreRelease Hook Phase
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: BkApp is the Schema for the bkapps API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: AppSpec defines the desired state of BkApp
            properties:
              addons:
                description: Addons is a list of add-on service
                items:
                  description: Addon is used to specify add-on service
                  properties:
                    name:
                      description: Name of the add-on service, e.g. redis
                      type: string
                    specs:
                      description: Specifies of the add-on service, if not set, recommended
                        specifies will be used
                      items:
                        description: 'AddonSpec is used to specify add-on service,
                          e.g. version: 6.0'
                        properties:
                          name:
                            description: Name of the spec.
                            type: string
                          value:
                            description: Value of the spec value
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                  required:
                  - name
                  type: object
                type: array
              build:
                description: 'BuildConfig is the configuration related with application
                  building, the platform support 3 types of build config currently:
                  image, remote build by Dockerfile and remote build by buildpack.'
                properties:
                  args:
                    additionalProperties:
                      type: string
                    description: Args is the additional build arguments, it will be
                      used to build image by Dockerfile
                    type: object
                  buildTarget:
                    description: BuildTarget, when multiple stages are defined in
                      Dockerfile, this field is used to specify the target stage.
                    type: string
                  dockerfile:
                    description: '*2. Remote build by Dockerfile* Dockerfile is the
                      name of target Dockerfile, it will be used to build.'
                    type: string
                  image:
                    description: '*1. Build by image* Image is the container image
                      name of current application, tag and container registry address
                      can be included.'
                    type: string
                  imageCredentialsName:
                    description: ImageCredentialsName is the name of image credentials,
                      required for pulling images stores in private registry.
                    type: string
                  imagePullPolicy:
                    description: ImagePullPolicy is the image pull policy of given
                      image.
                    type: string
                type: object
              configuration:
                description: AppConfig is bkapp related configuration, such as environment
                  variables, etc.
                properties:
                  env:
                    description: List of environment variables to set in the container.
                    items:
                      description: AppEnvVar defines the environment variable of bkapp
                      properties:
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: Value of the environment variable
                          type: string
                      required:
                      - name
                      - value
                      type: object
                    type: array
                type: object
              domainResolution:
                description: Domain name resolution config
                properties:
                  hostAliases:
                    description: 'HostAliases is an optional list of hosts and IPs
                      that will be injected into the pod''s hosts file if specified.
                      This is only valid for non-hostNetwork pods. NOTE: Copied from
                      Kubernetes PodSpec API.'
                    items:
                      description: HostAlias holds the mapping between IP and hostnames
                        that will be injected as an entry in the pod's hosts file.
                      properties:
                        hostnames:
                          description: Hostnames for the above IP address.
                          items:
                            type: string
                          type: array
                        ip:
                          description: IP address of the host file entry.
                          type: string
                      type: object
                    type: array
                  nameservers:
                    description: Nameservers specifies the IP addresses of the name
                      servers
                    items:
                      type: string
                    type: array
                type: object
              envOverlay:
                description: EnvOverlay holds environment specified configurations,
                  includes replica count and environment variables.
                properties:
                  autoscaling:
                    description: Autoscaling overwrite process's autoscaling config
                    items:
                      description: AutoscalingOverlay overwrite or add application's
                        autoscaling config by environment.
                      properties:
                        envName:
                          description: EnvName is app environment name
                          type: string
                        maxReplicas:
                          description: maxReplicas is the upper limit for the number
                            of replicas to which the autoscaler can scale up. It cannot
                            be less that minReplicas.
                          format: int32
                          type: integer
                        minReplicas:
                          description: minReplicas is the lower limit for the number
                            of replicas to which the autoscaler can scale down. It
                            defaults to 1 pod. minReplicas is allowed to be 0 if the
                            alpha feature gate GPAScaleToZero is enabled and at least
                            one Object or External metric is configured. Scaling is
                            active as long as at least one metric value is available
                          format: int32
                          type: integer
                        policy:
                          description: Policy defines the policy for autoscaling,
                            its optional values depend on the policies supported by
                            the operator.
                          type: string
                        process:
                          description: Process is the name of process
                          type: string
                      required:
                      - envName
                      - maxReplicas
                      - minReplicas
                      - policy
                      - process
                      type: object
                    type: array
                  envVariables:
                    description: EnvVariables overwrite BkApp's environment vars
                    items:
                      description: EnvVarOverlay overwrite or add application's environment
                        vars by environment.
                      properties:
                        envName:
                          description: EnvName is app environment name
                          type: string
                        name:
                          description: Name of the environment variable. Must be a
                            C_IDENTIFIER.
                          type: string
                        value:
                          description: Value of the environment variable
                          type: string
                      required:
                      - envName
                      - name
                      - value
                      type: object
                    type: array
                  mounts:
                    description: Mounts overwrite BkApp's mounts by environment
                    items:
                      description: MountOverlay overwrite or add application's mounts
                        by environment
                      properties:
                        envName:
                          description: EnvName is app environment name
                          type: string
                        mountPath:
                          description: Path of the mount
                          type: string
                        name:
                          description: Name of the mount
                          type: string
                        source:
                          description: Source of the mount
                          properties:
                            configMap:
                              description: ConfigMapSource represents a configMap
                                that should populate this volume
                              properties:
                                name:
                                  type: string
                              required:
                              - name
                              type: object
                            persistentStorage:
                              description: PersistentStorage represents a PersistentStorage
                                that should populate this volume
                              properties:
                                name:
                                  type: string
                              required:
                              - name
                              type: object
                          type: object
                      required:
                      - envName
                      - mountPath
                      - name
                      - source
                      type: object
                    type: array
                  replicas:
                    description: Replicas overwrite process's replicas count
                    items:
                      description: ReplicasOverlay overwrite process's replicas by
                        environment.
                      properties:
                        count:
                          description: Count is the desired replicas for current process
                          format: int32
                          type: integer
                        envName:
                          description: EnvName is app environment name
                          type: string
                        process:
                          description: Process is the name of process
                          type: string
                      required:
                      - count
                      - envName
                      - process
                      type: object
                    type: array
                  resQuotas:
                    description: ResQuotas overwrite BkApp's process resource quota
                    items:
                      description: ResQuotaOverlay overwrite process's resQuota by
                        environment.
                      properties:
                        envName:
                          description: EnvName is app environment name
                          type: string
                        plan:
                          description: Plan is used to specify process resource quota
                          type: string
                        process:
                          description: Process is the name of process
                          type: string
                      required:
                      - envName
                      - plan
                      - process
                      type: object
                    type: array
                type: object
              hooks:
                description: Hook commands of current BkApp resource
                properties:
                  preRelease:
                    description: Hook is a set of commands to execute during bkapp
                      deployment, running, and termination
                    properties:
                      args:
                        description: Arguments to the entrypoint.
                        items:
                          type: string
                        type: array
                      command:
                        description: Entrypoint array. Not executed within a shell.
                        items:
                          type: string
                        type: array
                    type: object
                type: object
              mounts:
                description: Mounts is a list of mount volume
                items:
                  description: Mount is used to specify mount volume
                  properties:
                    mountPath:
                      description: Path of the mount
                      type: string
                    name:
                      description: Name of the mount
                      type: string
                    source:
                      description: Source of the mount
                      properties:
                        configMap:
                          description: ConfigMapSource represents a configMap that
                            should populate this volume
                          properties:
                            name:
                              type: string
                          required:
                          - name
                          type: object
                        persistentStorage:
                          description: PersistentStorage represents a PersistentStorage
                            that should populate this volume
                          properties:
                            name:
                              type: string
                          required:
                          - name
                          type: object
                      type: object
                  required:
                  - mountPath
                  - name
                  - source
                  type: object
                type: array
              observability:
                description: Observability holds observability configurations, includes
                  metrics config. However, it is primarily informational here, the
                  real control logic is in paas "apiserver".
                properties:
                  monitoring:
                    description: Monitoring is monitor config
                    properties:
                      metrics:
                        items:
                          description: Metric is monitor metric config for process
                            services
                          properties:
                            params:
                              additionalProperties:
                                type: string
                              description: Params is the params of metric api
                              type: object
                            path:
                              description: Path is the path of metric api
                              type: string
                            process:
                              description: Process is the name of process
                              type: string
                            serviceName:
                              description: ServiceName is the name of process service
                              type: string
                          required:
                          - path
                          - process
                          - serviceName
                          type: object
                        type: array
                    required:
                    - metrics
                    type: object
                type: object
              processes:
                items:
                  description: Process defines the process of BkApp
                  properties:
                    args:
                      description: Arguments to the entrypoint.
                      items:
                        type: string
                      type: array
                    autoscaling:
                      description: Autoscaling specifies the autoscaling configuration
                      properties:
                        maxReplicas:
                          description: maxReplicas is the upper limit for the number
                            of replicas to which the autoscaler can scale up. It cannot
                            be less that minReplicas.
                          format: int32
                          type: integer
                        minReplicas:
                          description: minReplicas is the lower limit for the number
                            of replicas to which the autoscaler can scale down. It
                            defaults to 1 pod. minReplicas is allowed to be 0 if the
                            alpha feature gate GPAScaleToZero is enabled and at least
                            one Object or External metric is configured. Scaling is
                            active as long as at least one metric value is available
                          format: int32
                          type: integer
                        policy:
                          description: Policy defines the policy for autoscaling,
                            its optional values depend on the policies supported by
                            the operator.
                          type: string
                      required:
                      - maxReplicas
                      - minReplicas
                      - policy
                      type: object
                    command:
                      description: Entrypoint array. Not executed within a shell.
                      items:
                        type: string
                      type: array
                    name:
                      description: Name of process
                      type: string
                    probes:
                      description: Probes specifies the probe configuration
                      properties:
                        liveness:
                          description: liveness is the configuration for liveness
                            probes.
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's
                                    filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions
                                    ('|', etc) won't work. To use a shell, you need
                                    to explicitly call out to that shell. Exit status
                                    of 0 is treated as live/healthy and non-zero is
                                    unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            grpc:
                              description: GRPC specifies an action involving a GRPC
                                port. This is a beta field and requires enabling GRPCContainerProbe
                                feature gate.
                              properties:
                                port:
                                  description: Port number of the gRPC service. Number
                                    must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                                service:
                                  description: "Service is the name of the service
                                    to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                    \n If this is not specified, the default behavior
                                    is defined by gRPC."
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in
                                    httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the
                                    host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container
                                has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness and startup. Minimum
                                value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving
                                a TCP port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: Optional duration in seconds the pod needs
                                to terminate gracefully upon probe failure. The grace
                                period is the duration in seconds after the processes
                                running in the pod are sent a termination signal and
                                the time when the processes are forcibly halted with
                                a kill signal. Set this value longer than the expected
                                cleanup time for your process. If this value is nil,
                                the pod's terminationGracePeriodSeconds will be used.
                                Otherwise, this value overrides the value provided
                                by the pod spec. Value must be non-negative integer.
                                The value zero indicates stop immediately via the
                                kill signal (no opportunity to shut down). This is
                                a beta field and requires enabling ProbeTerminationGracePeriod
                                feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                is used if unset.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                                times out. Defaults to 1 second. Minimum value is
                                1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        readiness:
                          description: ReadinessProbe is the configuration for readiness
                            probes.
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's
                                    filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions
                                    ('|', etc) won't work. To use a shell, you need
                                    to explicitly call out to that shell. Exit status
                                    of 0 is treated as live/healthy and non-zero is
                                    unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            grpc:
                              description: GRPC specifies an action involving a GRPC
                                port. This is a beta field and requires enabling GRPCContainerProbe
                                feature gate.
                              properties:
                                port:
                                  description: Port number of the gRPC service. Number
                                    must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                                service:
                                  description: "Service is the name of the service
                                    to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                    \n If this is not specified, the default behavior
                                    is defined by gRPC."
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in
                                    httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the
                                    host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container
                                has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness and startup. Minimum
                                value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving
                                a TCP port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: Optional duration in seconds the pod needs
                                to terminate gracefully upon probe failure. The grace
                                period is the duration in seconds after the processes
                                running in the pod are sent a termination signal and
                                the time when the processes are forcibly halted with
                                a kill signal. Set this value longer than the expected
                                cleanup time for your process. If this value is nil,
                                the pod's terminationGracePeriodSeconds will be used.
                                Otherwise, this value overrides the value provided
                                by the pod spec. Value must be non-negative integer.
                                The value zero indicates stop immediately via the
                                kill signal (no opportunity to shut down). This is
                                a beta field and requires enabling ProbeTerminationGracePeriod
                                feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                is used if unset.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                                times out. Defaults to 1 second. Minimum value is
                                1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                        startup:
                          description: StartupProbe is the configuration for startup
                            probes.
                          properties:
                            exec:
                              description: Exec specifies the action to take.
                              properties:
                                command:
                                  description: Command is the command line to execute
                                    inside the container, the working directory for
                                    the command  is root ('/') in the container's
                                    filesystem. The command is simply exec'd, it is
                                    not run inside a shell, so traditional shell instructions
                                    ('|', etc) won't work. To use a shell, you need
                                    to explicitly call out to that shell. Exit status
                                    of 0 is treated as live/healthy and non-zero is
                                    unhealthy.
                                  items:
                                    type: string
                                  type: array
                              type: object
                            failureThreshold:
                              description: Minimum consecutive failures for the probe
                                to be considered failed after having succeeded. Defaults
                                to 3. Minimum value is 1.
                              format: int32
                              type: integer
                            grpc:
                              description: GRPC specifies an action involving a GRPC
                                port. This is a beta field and requires enabling GRPCContainerProbe
                                feature gate.
                              properties:
                                port:
                                  description: Port number of the gRPC service. Number
                                    must be in the range 1 to 65535.
                                  format: int32
                                  type: integer
                                service:
                                  description: "Service is the name of the service
                                    to place in the gRPC HealthCheckRequest (see https://github.com/grpc/grpc/blob/master/doc/health-checking.md).
                                    \n If this is not specified, the default behavior
                                    is defined by gRPC."
                                  type: string
                              required:
                              - port
                              type: object
                            httpGet:
                              description: HTTPGet specifies the http request to perform.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to
                                    the pod IP. You probably want to set "Host" in
                                    httpHeaders instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request.
                                    HTTP allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header
                                      to be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                    type: object
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Name or number of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                                scheme:
                                  description: Scheme to use for connecting to the
                                    host. Defaults to HTTP.
                                  type: string
                              required:
                              - port
                              type: object
                            initialDelaySeconds:
                              description: 'Number of seconds after the container
                                has started before liveness probes are initiated.
                                More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe
                                to be considered successful after having failed. Defaults
                                to 1. Must be 1 for liveness and startup. Minimum
                                value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocket specifies an action involving
                                a TCP port.
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to,
                                    defaults to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: integer
                                  - type: string
                                  description: Number or name of the port to access
                                    on the container. Number must be in the range
                                    1 to 65535. Name must be an IANA_SVC_NAME.
                                  x-kubernetes-int-or-string: true
                              required:
                              - port
                              type: object
                            terminationGracePeriodSeconds:
                              description: Optional duration in seconds the pod needs
                                to terminate gracefully upon probe failure. The grace
                                period is the duration in seconds after the processes
                                running in the pod are sent a termination signal and
                                the time when the processes are forcibly halted with
                                a kill signal. Set this value longer than the expected
                                cleanup time for your process. If this value is nil,
                                the pod's terminationGracePeriodSeconds will be used.
                                Otherwise, this value overrides the value provided
                                by the pod spec. Value must be non-negative integer.
                                The value zero indicates stop immediately via the
                                kill signal (no opportunity to shut down). This is
                                a beta field and requires enabling ProbeTerminationGracePeriod
                                feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds
                                is used if unset.
                              format: int64
                              type: integer
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe
                                times out. Defaults to 1 second. Minimum value is
                                1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                          type: object
                      type: object
                    replicas:
                      description: Replicas will be used as deployment's spec.replicas
                      format: int32
                      type: integer
                    resQuotaPlan:
                      description: ResQuotaPlan is the name of plan which defines
                        how much resources current process can consume.
                      type: string
                    services:
                      description: Services is a list of ProcService which used to
                        expose process network for access within or outside the cluster.
                      items:
                        description: ProcService is a process service which used to
                          expose network
                        properties:
                          exposedType:
                            description: "The exposed type of the service. If not
                              specified(or specified as null), the service can only
                              be accessed within the cluster, not from outside. however,
                              it is primarily informational here, the real control
                              logic is in paas \"apiserver\". TODO implement control
                              logic in operator? \n ExposedType can be one of the
                              following: - {Name: ExposedTypeNameBkHttp} exposed by
                              DomainGroupMapping"
                            properties:
                              name:
                                description: The name of the exposed type.
                                type: string
                            required:
                            - name
                            type: object
                          name:
                            description: The name of the service.
                            type: string
                          port:
                            description: The port that will be exposed by this service.
                              If this is not specified, the value of the 'targetPort'
                              field is used.
                            format: int32
                            type: integer
                          protocol:
                            default: TCP
                            description: The protocol of the service. Default value
                              is TCP if not specified.
                            type: string
                          targetPort:
                            description: Number of the port to access on the pods(container)
                              targeted by the service.
                            format: int32
                            type: integer
                        required:
                        - name
                        - targetPort
                        type: object
                      type: array
                    targetPort:
                      description: The containerPort to expose server
                      format: int32
                      type: integer
                  required:
                  - name
                  - replicas
                  type: object
                type: array
              svcDiscovery:
                description: The application's service discovery config
                properties:
                  bkSaaS:
                    description: A list of entries that contain SaaS module info
                    items:
                      description: SvcDiscEntryBkSaaS is an entry that represents
                        an application and an optional module.
                      properties:
                        bkAppCode:
                          description: BkAppCode is the code of the application.
                          type: string
                        moduleName:
                          description: ModuleName is the name of the module, when
                            absent, the "main" module will be used.
                          type: string
                      required:
                      - bkAppCode
                      type: object
                    type: array
                type: object
            required:
            - build
            - configuration
            - processes
            type: object
          status:
            description: AppStatus defines the observed state of BkApp
            properties:
              addonStatuses:
                description: AddonStatuses is the status of add-on service include
                  specifications
                items:
                  description: AddonStatus is the status of add-on service
                  properties:
                    message:
                      description: if add-on service state is failed, message will
                        be the fail message
                      type: string
                    name:
                      type: string
                    specs:
                      items:
                        description: 'AddonSpec is used to specify add-on service,
                          e.g. version: 6.0'
                        properties:
                          name:
                            description: Name of the spec.
                            type: string
                          value:
                            description: Value of the spec value
                            type: string
                        required:
                        - name
                        - value
                        type: object
                      type: array
                    state:
                      description: AddonState is the state of add-on with app
                      enum:
                      - provisioned
                      - failed
                      type: string
                  required:
                  - name
                  - state
                  type: object
                type: array
              addresses:
                description: Addresses holds all addressable locations of current
                  BkApp, user may visit app via these locations, includes all domain
                  source types.
                items:
                  description: Addressable includes URL and other related properties
                  properties:
                    sourceType:
                      description: SourceType, see CRD DomainGroupMapping for more
                        details
                      type: string
                    url:
                      description: URL generally has the form "http[s]://{hostname}/{subpath}/"
                      type: string
                  required:
                  - sourceType
                  - url
                  type: object
                type: array
              conditions:
                description: Conditions Represents the latest available observations
                  of a BkApp's current state.
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              deployId:
                description: DeployId of the BkApp, which is injected from bkpaas
                type: string
              hookStatuses:
                description: HookStatuses is the status of Hook execution
                items:
                  description: HookStatus define the status of Hook execution
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the status
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: if pod is unhealthy, message will be the fail message,
                        otherwise, same with PodStatus.Message
                      type: string
                    phase:
                      description: Phase Represents the hook pod health status
                      type: string
                    reason:
                      description: Same with PodStatus.Reason
                      type: string
                    startTime:
                      description: The hook's start time
                      format: date-time
                      type: string
                    started:
                      description: Started is true when hook is started
                      type: boolean
                    type:
                      description: HookType hook type
                      type: string
                  required:
                  - phase
                  - type
                  type: object
                type: array
              lastUpdate:
                description: LastUpdate is the bkapp's last update time
                format: date-time
                type: string
              observedGeneration:
                description: observedGeneration is the most recent generation observed
                  for this BkApp. It corresponds to the .metadata.generation, which
                  is updated on mutation by the API Server.
                format: int64
                type: integer
              phase:
                description: The phase of a BkApp is a simple, high-level summary
                  of where the BkApp is in its lifecycle.
                type: string
              revision:
                description: 'Deprecated: The Revision field was designed to save
                  the revision of the BkApp resource, controls how the reconcile works.
                  But it doesn''t have any effects now because we switched to using
                  "DeployID" field. Revision of the BkApp configuration it generates'
                properties:
                  revision:
                    description: BkApp's version
                    format: int64
                    type: integer
                required:
                - revision
                type: object
            required:
            - phase
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
