apiVersion: paas.bk.tencent.com/v1alpha1
kind: ProjectConfig
metadata:
  name: projectconfig-sample
health:
  healthProbeBindAddress: :8081
metrics:
  bindAddress: 127.0.0.1:8080
webhook:
  port: 9443
leaderElection:
  leaderElect: true
  resourceName: e56dbef1.bk.tencent.com
zapOpts:
  zapDevel: false
platform:
  bkAppCode: "bk_paas3"
  bkAppSecret: ""
  bkAPIGatewayURL: ""
  sentryDSN: ""
  ingressClassName: ""
ingressPlugin:
  accessControl:
    redisConfigKey: ""
  paasAnalysis:
    enabled: false
resLimits:
  procDefaultCPULimit: 4000m
  procDefaultMemLimit: 1024Mi
  maxReplicas: 5
resRequests:
  procDefaultCPURequest: 100m
  procDefaultMemRequest: 64Mi
autoscaling:
  enabled: false
maxProcesses: 16

## leaderElectionReleaseOnCancel defines if the leader should step down volume
## when the Manager ends. This requires the binary to immediately end when the
## Manager is stopped, otherwise, this setting is unsafe. Setting this significantly
## speeds up voluntary leader transitions as the new leader don't have to wait
## LeaseDuration time first.
## In the default scaffold provided, the program ends immediately after
## the manager stops, so would be fine to enable this option. However,
## if you are doing or is intended to do any operation such as perform cleanups
## after the manager stops then its usage might be unsafe.
# leaderElectionReleaseOnCancel: true

## groupKindConcurrency defines how many workers each kind of
## resource has to handle resource change events, default value is 5
# controller:
#   groupKindConcurrency:
#     bkApp: 5
#     domainGroupMapping: 5
