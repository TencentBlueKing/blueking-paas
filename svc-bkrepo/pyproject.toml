[tool.poetry]
version = "1.0.0"

[tool.poetry.dependencies]
python = ">=3.11,<3.12"

[tool.poetry.group.dev.dependencies]
flake8 = "*"
ipython = "*"
pytest = "*"
pytest-django = "*"
requests-mock = "==1.5.2"

[[tool.poetry.source]]
name = "pypi-tencent-mirror"
url = "https://mirrors.tencent.com/pypi/simple/"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 119
skip-string-normalization = 'true'
exclude = '''
/(
    .*/migrations/.*
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = 'true'
force_grid_wrap = 0
use_parentheses = 'true'
line_length = 119

[project]
name = "svc-bkrepo"
description = ""
# classifieres is dynamic because we want to create Python classifiers automatically
dynamic = ["classifiers"]
authors = [{name = "blueking", email = "blueking@tencent.com"}]
requires-python = '>=3.11,<3.12'
dependencies = [
    'django (==4.2.17)',
    'pymysql (==1.1.1)',
    'gunicorn (==22.0.0)',
    'paas-service (==2.0.2)',
    'djangorestframework (==3.15.2)',
    'requests (==2.32.3)',
    'gevent (==24.2.1)',
    'cryptography (==43.0.3)',
    'jsonfield (==3.1.0)',
    'whitenoise (==5.3.0)',
    'sentry_sdk (==0.19.4)',
    'blue-krill (==2.0.7)',
    'bkpaas-auth (==3.0.0)',
    'prometheus-client (==0.14.1)',
    'pydantic (==1.10.15)',
    'curlify (>=2.2.1,<3.0.0)',
    'django-environ (==0.8.1)',
    'apscheduler (>=3.9.1,<4.0.0)',
    'filelock (>=3.7.1,<4.0.0)',
    'urllib3 (==1.26.20)',
    'pyjwt (==2.4.0)'
]
