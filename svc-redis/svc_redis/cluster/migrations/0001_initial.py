# Generated by Django 4.2.17 on 2025-04-22 13:09

import blue_krill.models.fields
from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields
import svc_redis.cluster.constants
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('uuid', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='UUID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='集群名称', max_length=32, unique=True)),
                ('type', models.CharField(default=svc_redis.cluster.constants.ClusterType['NORMAL'], help_text='集群类型', max_length=32)),
                ('description', models.TextField(blank=True, help_text='集群描述')),
                ('annotations', jsonfield.fields.JSONField(blank=True, default=dict, help_text='集群元数据，如 BCS 项目，集群，业务信息等')),
                ('ca_data', blue_krill.models.fields.EncryptField(blank=True, help_text='证书认证机构（CA）', null=True)),
                ('cert_data', blue_krill.models.fields.EncryptField(blank=True, help_text='客户端证书', null=True)),
                ('key_data', blue_krill.models.fields.EncryptField(blank=True, help_text='客户端密钥', null=True)),
                ('token_type', models.IntegerField(default=svc_redis.cluster.constants.ClusterTokenType['SERVICE_ACCOUNT'], help_text='Token 类型')),
                ('token_value', blue_krill.models.fields.EncryptField(blank=True, help_text='Token 值', null=True)),
                ('assert_hostname', models.JSONField(blank=True, default=None, help_text='TLS 验证主机名', null=True)),
            ],
            options={
                'verbose_name': '集群',
                'verbose_name_plural': '集群',
            },
        ),
        migrations.CreateModel(
            name='TencentCLBListener',
            fields=[
                ('uuid', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='UUID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(help_text='CLB 名称', max_length=255)),
                ('clb_id', models.CharField(help_text='CLB ID', max_length=255)),
                ('vip', models.GenericIPAddressField(help_text='CLB VIP 地址')),
                ('port', models.IntegerField(help_text='CLB 端口')),
                ('is_allocated', models.BooleanField(default=False, help_text='是否已被分配')),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='clb_endpoints', to='cluster.cluster')),
            ],
            options={
                'verbose_name': '腾讯云 CLB 监听器',
                'verbose_name_plural': '腾讯云 CLB 监听器',
                'unique_together': {('vip', 'port')},
            },
        ),
        migrations.CreateModel(
            name='APIServer',
            fields=[
                ('uuid', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True, verbose_name='UUID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('host', models.CharField(help_text='API Server 的后端地址', max_length=255)),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='api_servers', to='cluster.cluster')),
            ],
            options={
                'verbose_name': 'API Server',
                'verbose_name_plural': 'API Server',
                'unique_together': {('cluster', 'host')},
            },
        ),
    ]
