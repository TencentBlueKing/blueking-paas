[tool.poetry]
name = "paas_wl"
version = "v20201125"
description = "PaaS Workloads service"
authors = ["blueking <blueking@tencent.com>"]

[tool.poetry.dependencies]
python = ">=3.8.1,<3.11"
djangorestframework = "3.12.4"
django-prometheus = "2.2.0"
jsonfield = "3.1.0"
boto3 = "1.4.3"
click = "6.7"
celery = "==4.4.7"
kombu = ">=4.6.10,<4.7"
# NOTE: We are not using the newest version(25.X) because there is a bug which
# causes the library stop working under Python 3.8.
# Bug detail: https://github.com/kubernetes-client/python/pull/1854/commits/51badbcdbb3a905b9f79a60fc231ce69ec7e4c4a
# 
# TODO: Upgrade when above bug was fixed.
kubernetes = "24.2.0"
requests = "2.27.1"
redis = "==3.5.3"
python-logstash = "0.4.6"
Django = "3.2.12"
PyMySQL = "0.6.7"
Jinja2 = "2.10"
websocket-client = "0.43.0"
PyYAML = "5.4.1"
blue-krill = "1.2.2"
bkpaas-auth = {version = ">=2.0.1"}
gunicorn = "20.1.0"
dataclasses = {version = "==0.7", python = ">=3.6.2,<3.7"}
prometheus-client = "==0.9.0"
arrow = "0.17.0"
gevent = "21.12.0"
typing-extensions = "*"
sentry_sdk = "0.19.4"
mysqlclient = "2.0.1"
bkoauth = {version = "^0.0.22"}
cryptography = "3.4.7"
drf-yasg = "1.20.0"
attrs = "^21.4.0"
cattrs = "~1.0.0"
dynaconf = "^3.1.8"
werkzeug = "==0.12.1"
opentelemetry-api = "1.7.1"
opentelemetry-sdk = "1.7.1"
opentelemetry-exporter-otlp = "1.7.1"
opentelemetry-exporter-jaeger = "1.7.1"
opentelemetry-instrumentation-django = "0.26b1"
opentelemetry-instrumentation-dbapi = "0.26b1"
opentelemetry-instrumentation-redis = "0.26b1"
opentelemetry-instrumentation-requests = "0.26b1"
opentelemetry-instrumentation-logging = "0.26b1"
opentelemetry-instrumentation-celery = "0.26b1"
markupsafe = "2.0.1"
types-pymysql = "^1.0.19"
protobuf = "3.20.1"
apigw-manager = "1.1.1"

[tool.poetry.extras]
bcs = ["bkapigw-bcs-app"]

[tool.poetry.dev-dependencies]
black = "==20.8b0"
flake8 = "==6.0.0"
flake8-bugbear = "==23.1.20"
flake8-comprehensions = "==3.10.1"
flake8-pie = "==0.16.0"
mypy = "==1.0.0"
pytest = "<5.0.0,>=4.0.2"
pytest-django = "3.4.8"
pytest-cov = "2.7.1"
mock = "2.0.0"
django-dynamic-fixture = "3.1.2"
ipython = "7.34.0"
types-redis = "^4.1.18"
types-dataclasses = "^0.6.4"
types-pytz = "^2021.3.6"
types-requests = "^2.27.14"
types-pyyaml = "^5"
types-six = "^1.16.12"

[[tool.poetry.source]]
url = "https://mirrors.tencent.com/pypi/simple/"
name = "pypi-tencent-mirror"
default = true

[tool.black]
line-length = 119
skip-string-normalization = 'true'
exclude = '''
/(
  node_modules/.*
  | .*/migrations/.*
)/
'''

[tool.isort]
multi_line_output = 3
include_trailing_comma = 'true'
force_grid_wrap = 0
use_parentheses = 'true'
line_length = 119
known_first_party = ["paas_wl", "tests"]

[tool.mypy]
ignore_missing_imports = true
show_error_codes = true
check_untyped_defs = true
namespace_packages = true
exclude = [
  '.*/[^/]*settings[^/]*/.*',
]

[[tool.mypy.overrides]]
module = "mypy-paasng.settings.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "*.migrations.*"
ignore_errors = true

[build-system]
requires = ["poetry>=1.1.4"]
build-backend = "poetry.masonry.api"
